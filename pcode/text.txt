Read Ref file

Read Param:
String ref file layout:
0x18 English_Hash : Unsigned_32
0x20 German_Hash : Unsigned_32
0x2C Spanish_Hash : Unsigned_32
0x60 Num_Hashes : Unsigned_32
0x70 Hash_List : array (1 .. Num of string hashes) of Unsigned_32;

The Hash contains references both to the Package and Entry ID to extract
to a raw text file CONFIRMED

Read raw text file:

The raw text file contains a header and entries
Header is as follows:
File_Length 0 .. 3 CONFIRMED
Filler 4 .. 7
Num_Entries 8 .. B
Filler C .. 47
Num_Strings 48 .. 4B
Filler 4C .. 4F
Offset_Meta (needs +0x60) 50 .. 53

String Meta is as follows: (Seek to Offset_Meta)
Entry_Meta_Offset
Num_Entries (Seek Current + 4)
Repeat for I < Num_Entries to collect String Metas



These entries are like follows: 
for I in String_Metas loop
seek I.Entry_Meta_Offset;
for N in I.Num_Entries loop
Filler 0 .. 7
String_Offset 8 .. B
Filler C .. 13
Read_Length 14 .. 15
String_Length 16 .. 17
Obfuscator 18 .. 19
Filler 1A .. 20
end loop;
end loop;

Get Strings:
	For I (Entry_Meta_List) in L loop
		string = ""
		for N (Entry_Meta) in I loop
			Seek (Offset)
			array = read (read_length)
			string += decode_string (in, out, N.obfuscator)
		end loop
		strings.add (string);
	end loop

Decode_String (in, out, obfuscator)
	See Ginsor source (very long and convoluted)


Get_Pkg_File_From_Hash:
	Calc Package Id From Hash (Hash)
	if Package ID = 0x513 then
		Package Id = 0x913
	Calc Entry Id From Hash (Hash)
	
Calc_Pkg_ID_From_Hash:
	if hash < 0x80FFFFFF then
		num = (hash >> 0xD & 0x3FF)
	else
		num = ((hash >> 0xD & 0x3FF) | 0x400)
	
	if num == 0x519 or num == 0x539 then
		return num + 0x400
	else
		return num

Calc Entry ID From Hash
	return hash & 0x1FFF
